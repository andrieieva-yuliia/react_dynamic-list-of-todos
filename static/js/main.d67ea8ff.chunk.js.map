{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","onSelect","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","query","filterType","setQuery","setFilterType","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","closeModal","useState","loading","setLoading","user","setUser","useEffect","userId","foundUser","href","email","name","App","setTodos","setSelectedTodo","todosFromServer","todoList","todoId","find","cleanQuery","trim","toLowerCase","filter","includes","filterTodos","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d67ea8ff.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: number;\n  onSelect: (todoId: number) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  onSelect,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          key={todo.id}\n          data-cy=\"todo\"\n          className={classNames(\n            { 'has-background-info-light': selectedTodo === todo.id },\n          )}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed\n              && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames(\n              { 'has-text-success': todo.completed },\n              { 'has-text-danger': !todo.completed },\n            )}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onSelect(todo.id)}\n            >\n              <span className=\"icon\">\n                <i className={classNames(\n                  'far',\n                  { 'fa-eye': selectedTodo !== todo.id },\n                  { 'fa-eye-slash': selectedTodo === todo.id },\n                )}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\ntype Props = {\n  query: string;\n  filterType: string;\n  setQuery: React.Dispatch<React.SetStateAction<string>>;\n  setFilterType: React.Dispatch<React.SetStateAction<string>>;\n};\n\nexport const TodoFilter = ({\n  query,\n  filterType,\n  setQuery,\n  setFilterType,\n}: Props) => {\n  const clearQuery = () => setQuery('');\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterType}\n            onChange={(event => setFilterType(event.target.value))}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={event => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span\n          className=\"icon is-right\"\n          style={{ pointerEvents: 'all' }}\n        >\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label   */}\n          {query && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={clearQuery}\n              aria-label=\"Clear\"\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo;\n  closeModal: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  closeModal,\n}: Props) => {\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    setLoading(true);\n\n    getUser(todo?.userId || 0)\n      .then(foundUser => {\n        setUser(foundUser);\n        setLoading(false);\n      });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {loading\n        ? <Loader />\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${todo.id}`}\n              </div>\n\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                aria-label=\"close\"\n                onClick={closeModal}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {todo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {todo.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n\n                {' by '}\n\n                <a href={`mailto:${user?.email}`}>\n                  {user?.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filterType, setFilterType] = useState('all');\n  const [query, setQuery] = useState('');\n\n  const selectTodo = (todoId: number) => {\n    setSelectedTodo(todos.find(todo => todo.id === todoId) || null);\n  };\n\n  const closeModal = () => setSelectedTodo(null);\n\n  const filterTodos = () => {\n    const cleanQuery = query.trim().toLowerCase();\n\n    switch (filterType) {\n      case 'active':\n        return todos\n          .filter(todo => !todo.completed\n              && todo.title.toLowerCase().includes(cleanQuery));\n      case 'completed':\n        return todos\n          .filter(todo => todo.completed\n              && todo.title.toLowerCase().includes(cleanQuery));\n      default:\n        return todos\n          .filter(todo => todo.title.toLowerCase().includes(cleanQuery));\n    }\n  };\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => {\n        setTodos(todosFromServer);\n      });\n  }, []);\n\n  const todoList = (\n    <TodoList\n      selectedTodo={selectedTodo?.id || 0}\n      onSelect={selectTodo}\n      todos={filterTodos()}\n    />\n  );\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                filterType={filterType}\n                setQuery={setQuery}\n                setFilterType={setFilterType}\n              />\n            </div>\n\n            <div className=\"block\">\n              {\n                todos.length\n                  ? todoList\n                  : <Loader />\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          closeModal={closeModal}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}